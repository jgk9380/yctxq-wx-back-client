/**
 * Created by jianggk on 2017/9/19.
 */
// 贪婪模式与非贪婪模式讲解
// Javascript中的正则贪婪与非贪婪模式的区别是：被量词修饰的子表达式的匹配行为；
// 贪婪模式在整个表达式匹配成功的情况下尽可能多的匹配；// 非贪婪模式在整个表达式匹配成功的前提下，尽可能少的匹配；

// 一些常见的修饰贪婪模式的量词如下： // {x,y} ,  {x,} ,  ? ,  * , 和  +
// 那么非贪婪模式就是在如上贪婪模式后加上一个?(问号)，就可以变成非贪婪模式的量词；如：// {x,y}?，{x,}?，??，*?，和 +?
//1. 什么是贪婪模式？

var str = "longen<p>我是中国人</p>yunxi<p>我是男人</p>boyboy";
// 贪婪模式 匹配所有字符
console.log(str.match(/<p>.*<\/p>/)[0]);
// <p>我是中国人</p>yunxi<p>我是男人</p>

// 后面加问号，变成非贪婪模式
console.log(str.match(/<p>.*?<\/p>/)[0]); // <p>我是中国人</p>

// 第一个console.log使用的是贪婪模式，我们来理解下匹配的基本原理；//
// 首先正则是 /<p>.*<\/p>/ 匹配；<p>匹配字符串第一个字符匹配失败，接着往下，直接匹配到<p>时候，匹配成功，接着把匹配的控制权交给.*，
// 从匹配到的<p>位置开始匹配，一直到</p>之前，接着把控制权交给</p>，
// 接着在当前位置下往下匹配，因此匹配到</p>，匹配成功；由于它是贪婪模式，
// 在匹配成功的前提下，仍然会尝试向右往下匹配，因此会匹配到两个<p>标签结束；但是非贪婪模式，也就是第二个console.log()；
// 他匹配到第一个p标签成功后，它就不会再进行匹配，因此打印的值为一个p标签的内容了；
//
// 理解匹配成功前提下的含义： 上面我们解释了，贪婪模式是要等一个表达式匹配成功后，再往下匹配；比如我们现在接着再看下们的表达式匹配代码：
